name: Build Multi-Architecture ROS Containers

on:
  push:
    tags:
      - 'dev*'
      - 'latest'
      - 'v*'

jobs:
  
  # Detect file changes and set conditions for subsequent jobs
  check-conditions:
    runs-on: ubuntu-latest
    
    outputs:
      image_version: ${{ steps.set_version.outputs.image_version }}
      combinations: ${{ steps.read_combinations.outputs.COMBINATIONS_JSON }}
    
      permissions:
      packages: write
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # fetch all history to compare with previous commits

      - name: Check the branch
        id: branch-check
        run: |
          # find all remote branches containing this commit
          branches=$(git branch -r --contains $GITHUB_SHA)
          echo "::set-output name=branches::$branches"

      - name: Fail if tag is invalid
        if: |
          startsWith(github.ref, 'refs/tags/dev') ||
          ( (github.ref == 'refs/tags/latest' || startsWith(github.ref, 'refs/tags/v')) &&
            contains( steps.branch-check.outputs.branches, 'origin/master' ) )
        run: |
          echo "Tag $GITHUB_REF is not on master. Aborting."
          exit 1

      - name: Set image version
        id: set_version
        run: |
          echo "image_version=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Read combinations JSON file
        id: read_combinations
        run: |
          echo 'COMBINATIONS_JSON<<EOF' >> $GITHUB_OUTPUT
          cat .github/workflows/combinations.json >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  # Stage 1: ROS2 base humble images (AMD64/x86)
  ros2-humble-base-amd64:
    needs: check-conditions
    name: ROS2 Humble Base Images (AMD64)
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        config:
          - ${{ fromJson(needs.check-conditions.outputs.combinations) }}.humble
          - ${{ fromJson(needs.check-conditions.outputs.combinations) }}.humble_gpu
    uses: ./.github/workflows/build-workflow.yaml
    with:
      docker_build_context: ${{ matrix.config.docker_build_context }}
      target_image_name: ${{ matrix.config.target_image_name }}
      image_version: ${{ matrix.config.image_version }}
      base_image: ${{ matrix.config.base_image }}
      runs_on: ubuntu-latest

  # Stage 1: ROS2 base humble images (Jetson/ARM)
  ros2-humble-jetson:
    needs: check-conditions
    name: ROS2 Humble Jetson Base
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        config:
          - ${{ fromJson(needs.check-conditions.outputs.combinations) }}.humble_jetson
    uses: ./.github/workflows/build-workflow.yaml
    with:
      docker_build_context: ${{ matrix.config.docker_build_context }}
      target_image_name: ${{ matrix.config.target_image_name }}
      image_version: ${{ matrix.config.image_version }}
      base_image: ${{ matrix.config.base_image }}
      runs_on: ubuntu-24.04-arm 

  # Stage 2: ROS2 wheelchair2_base images (AMD64/x86)
  ros2-wheelchair-base:
    needs: [check-conditions, ros2-humble-base-amd64]
    name: ROS2 Wheelchair2 Base Images
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        config:
          - ${{ fromJson(needs.check-conditions.outputs.combinations) }}.wheelchair2_base
          - ${{ fromJson(needs.check-conditions.outputs.combinations) }}.wheelchair2_base_gazebo
    uses: ./.github/workflows/build-workflow.yaml
    with:
      docker_build_context: ${{ matrix.config.docker_build_context }}
      target_image_name: ${{ matrix.config.target_image_name }}
      image_version: ${{ matrix.config.image_version }}
      base_image: ${{ matrix.config.base_image }}
      runs_on: ubuntu-latest

  # Stage 2: ROS2 wheelchair2_base_jetson (depends on humble_jetson)
  ros2-wheelchair-jetson:
    needs: [check-conditions, ros2-humble-jetson]
    name: ROS2 Wheelchair2 Jetson Images
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        config:
          - ${{ fromJson(needs.check-conditions.outputs.combinations) }}.wheelchair2_base_jetson
    uses: ./.github/workflows/build-workflow.yaml
    with:
      docker_build_context: ${{ matrix.config.docker_build_context }}
      target_image_name: ${{ matrix.config.target_image_name }}
      image_version: ${{ matrix.config.image_version }}
      base_image: ${{ matrix.config.base_image }}
      runs_on: ubuntu-24.04-arm